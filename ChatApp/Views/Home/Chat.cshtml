@model ChatApp.DAL.Entities.Chat
@{
    ViewData["Title"] = "Home Page";
}
<script src="js/modal.js"></script>
<div class="chat-body">

    @foreach (var msg in Model.Messages)
    {
   
        <div class="message" oncontextmenu="openContextMenu(this)">

            <header>@msg.UserName</header>
            <p>
                @msg.Text
            </p>
            <footer>@msg.SentTime</footer>
            <div class="context-menu d-none">
                <div>
                    <a href="#">Edit</a>
                </div>
                <div>
                    <a asp-controller="Chat", asp-action="DeleteOnlyFromUser"
                       asp-route-id="@msg.Id" asp-route-chatId="@Model.Id">Delete from me</a>
                </div>
                <div>
                    <a href="#">Delete from all</a>
                </div>
            </div>
        </div>
        
    }

</div>





<form class="chat-input" onsubmit="sendMessage(event)" asp-controller="Home" asp-action="CreateMessage">
    <input type="hidden" name="chatId" value="@Model.Id" />
    <input type="hidden" name="roomName" value="@Model.Name" />
    <input type="text" name="message" id="message-input" />
    <button type="submit">Send</button>


</form>

@section scripts
{
    <script src="js/site.js"></script>
    <script src="signalr/signalr.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>

        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();
        var _connectionId = '';
        connection.on("ReceiveMessage",
            function (data) {

                const message = document.createElement("div");
                message.classList.add('message');

                const header = document.createElement("header");
                header.appendChild(document.createTextNode(data.userName));

                const p = document.createElement("p");
                p.appendChild(document.createTextNode(data.text));

                const footer = document.createElement("footer");
                footer.appendChild(document.createTextNode(data.sentTime));

                message.appendChild(header);
                message.appendChild(p);
                message.appendChild(footer);

                document.querySelector('.chat-body').append(message);

            });

        var joinRoom = function () {
            var url = '/Chat/JoinRoom/' + _connectionId + '/@Model.Name';
            axios.post(url, null)
                .then(res => {
                    console.log("Room joined!", res);
                })
                .catch(err => {
                    console.log("Failed to join the room", err);
                });
        }

        connection.start()
            .then(function () {
                connection.invoke("getConnectionId")
                    .then(function (connectionId) {
                        _connectionId = connectionId;
                        joinRoom();
                    });
            })
            .catch(function (err) {
                console.log(err);
            });


        var sendMessage = function (event) {
            event.preventDefault();
            var data = new FormData(event.target);
            document.getElementById('message-input').value = '';
            axios.post('/Chat/SendMessage', data)
                .then(res => {
                    console.log("Ok");
                })
                .catch(err => {
                    console.log("Error");
                });

        }
    </script>
}